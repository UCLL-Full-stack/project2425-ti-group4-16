generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          Int            @id @default(autoincrement())
  name        String
  date        String
  startTime   String
  endTime     String
  location    String
  capacity    Int
  ticketsSold Int
  summary     String
  description String
  categories  CategoryClass[] @relation("EventCategories")
  images      Image[]
  ticketTypes TicketType[]
  tickets     Ticket[]
}

model TicketType {
  id      Int      @id @default(autoincrement())
  name    String
  price   Float
  event   Event?   @relation(fields: [eventId], references: [id])
  eventId Int?
  tickets Ticket[] 
}

model CategoryClass {
  id        Int         @id @default(autoincrement())
  name      String
  events    Event[]     @relation("EventCategories")
}

model Image {
  id       Int    @id @default(autoincrement())
  path     String
  altText  String
  event    Event? @relation(fields: [eventId], references: [id])
  eventId  Int?
}

model Ticket {
  id         Int         @id @default(autoincrement())
  purchasedOn DateTime    @default(now()) 
  ticketType TicketType   @relation(fields: [ticketTypeId], references: [id])
  ticketTypeId Int        
  event      Event?      @relation(fields: [eventId], references: [id])
  eventId    Int?
  payment    Payment?    @relation(fields: [paymentId], references: [id])
  paymentId  Int?
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  role     Role     @default(USER)
  profile  Profile?
  invoices Payment[]
}

model Payment {
  id           Int       @id @default(autoincrement())
  numOfTickets Int
  amount       Float
  status       String
  date         DateTime   @default(now())
  tickets      Ticket[]   
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
}

enum Role {
  ADMIN
  USER
}

model Profile {
  id          Int    @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String
  phoneNumber String
  birthDate   String
  userId      Int    @unique
  user        User   @relation(fields: [userId], references: [id])
}
